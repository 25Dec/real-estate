{"version":3,"file":"zones-store-DDylndqA.js","sources":["../../../../stores/zones-store.js"],"sourcesContent":["import { baseUrl } from '~/constants';\r\n\r\nexport const useZonesStore = defineStore('Zones', () => {\r\n\tconst zones = ref([]);\r\n\tconst zonesDropdown = ref([]);\r\n\tconst currentZone = ref({});\r\n\r\n\tconst getZones = async () => {\r\n\t\tconst accessToken = useCookie('token');\r\n\t\tconst { currentProjectIDFromLocalStore } = storeToRefs(useProjectsStore());\r\n\t\tconst { data } = await useFetch(baseUrl + '/auth/zone', {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\taccess_token: accessToken.value,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tzones.value = data.value.data.data.filter((zone) => {\r\n\t\t\treturn zone['project_id'] == currentProjectIDFromLocalStore.value;\r\n\t\t});\r\n\r\n\t\tif (data.value.data.data.length)\r\n\t\t\tzonesDropdown.value = zones.value.map((payment) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: `${payment['name']}`,\r\n\t\t\t\t\tvalue: `${payment['id']}`,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\telse zonesDropdown.value = [];\r\n\t};\r\n\r\n\tconst addNewZone = async (data) => {\r\n\t\tconst accessToken = useCookie('token');\r\n\t\tconst response = await $fetch(baseUrl + `/auth/zone`, {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\taccess_token: accessToken.value,\r\n\t\t\t},\r\n\t\t\tbody: data,\r\n\t\t});\r\n\r\n\t\tawait getZones();\r\n\t\treturn response;\r\n\t};\r\n\r\n\tconst editZone = async (data) => {\r\n\t\tconst accessToken = useCookie('token');\r\n\t\tconst response = await $fetch(baseUrl + `/auth/zone/${data['id']}`, {\r\n\t\t\tmethod: 'put',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\taccess_token: accessToken.value,\r\n\t\t\t},\r\n\t\t\tbody: data,\r\n\t\t});\r\n\r\n\t\tawait getZones();\r\n\t\treturn response;\r\n\t};\r\n\r\n\tconst deleteZone = async (data) => {\r\n\t\tconst accessToken = useCookie('token');\r\n\t\tconst response = await $fetch(baseUrl + `/auth/zone/${data['id']}`, {\r\n\t\t\tmethod: 'delete',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\taccess_token: accessToken.value,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tawait getZones();\r\n\t\treturn response;\r\n\t};\r\n\r\n\treturn {\r\n\t\tzones,\r\n\t\tzonesDropdown,\r\n\t\tcurrentZone,\r\n\t\tgetZones,\r\n\t\taddNewZone,\r\n\t\teditZone,\r\n\t\tdeleteZone,\r\n\t};\r\n});\r\n"],"names":[],"mappings":";;;;;;;;;AAEY,MAAC,gBAAgB,YAAY,SAAS,MAAM;AACvD,QAAM,QAAQ,IAAI,CAAA,CAAE;AACpB,QAAM,gBAAgB,IAAI,CAAA,CAAE;AAC5B,QAAM,cAAc,IAAI,CAAA,CAAE;AAE1B,QAAM,WAAW,YAAY;AAC5B,UAAM,cAAc,UAAU,OAAO;AACrC,UAAM,EAAE,+BAAgC,IAAG,YAAY,iBAAkB,CAAA;AACzE,UAAM,EAAE,KAAM,IAAG,MAAM,SAAS,UAAU,cAAc;AAAA,MACvD,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,cAAc,YAAY;AAAA,MAC1B;AAAA,IACF,GAAA,aAAC;AAED,UAAM,QAAQ,KAAK,MAAM,KAAK,KAAK,OAAO,CAAC,SAAS;AACnD,aAAO,KAAK,YAAY,KAAK,+BAA+B;AAAA,IAC/D,CAAG;AAED,QAAI,KAAK,MAAM,KAAK,KAAK;AACxB,oBAAc,QAAQ,MAAM,MAAM,IAAI,CAAC,YAAY;AAClD,eAAO;AAAA,UACN,MAAM,GAAG,QAAQ,MAAM,CAAC;AAAA,UACxB,OAAO,GAAG,QAAQ,IAAI,CAAC;AAAA,QAC5B;AAAA,MACA,CAAI;AAAA,QACG,eAAc,QAAQ;EAC7B;AAEC,QAAM,aAAa,OAAO,SAAS;AAClC,UAAM,cAAc,UAAU,OAAO;AACrC,UAAM,WAAW,MAAM,OAAO,UAAU,cAAc;AAAA,MACrD,QAAQ;AAAA,MACR,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,cAAc,YAAY;AAAA,MAC1B;AAAA,MACD,MAAM;AAAA,IACT,CAAG;AAED,UAAM,SAAQ;AACd,WAAO;AAAA,EACT;AAEC,QAAM,WAAW,OAAO,SAAS;AAChC,UAAM,cAAc,UAAU,OAAO;AACrC,UAAM,WAAW,MAAM,OAAO,UAAU,cAAc,KAAK,IAAI,CAAC,IAAI;AAAA,MACnE,QAAQ;AAAA,MACR,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,cAAc,YAAY;AAAA,MAC1B;AAAA,MACD,MAAM;AAAA,IACT,CAAG;AAED,UAAM,SAAQ;AACd,WAAO;AAAA,EACT;AAEC,QAAM,aAAa,OAAO,SAAS;AAClC,UAAM,cAAc,UAAU,OAAO;AACrC,UAAM,WAAW,MAAM,OAAO,UAAU,cAAc,KAAK,IAAI,CAAC,IAAI;AAAA,MACnE,QAAQ;AAAA,MACR,SAAS;AAAA,QACR,gBAAgB;AAAA,QAChB,cAAc,YAAY;AAAA,MAC1B;AAAA,IACJ,CAAG;AAED,UAAM,SAAQ;AACd,WAAO;AAAA,EACT;AAEC,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,CAAC;"}